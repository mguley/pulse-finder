upstream pulse_finder_backend {
    server localhost:4000;  # Points to your Go API server
}

# Define a rate-limiting zone for requests
limit_req_zone $binary_remote_addr zone=api_limit:10m rate=10r/s;

# Define a connection-limiting zone for simultaneous connections per IP
limit_conn_zone $binary_remote_addr zone=conn_limit:10m;

server {
    listen 80;
    server_name 1.2.3.4;  # Replace with your server IP

    # Hide server version information
    server_tokens off;

    # Only allow defined routes and restrict access to others
    location /v1/healthcheck {
        # Rate limiting with immediate handling of bursts
        limit_req zone=api_limit burst=20 nodelay;
        # Connection limit: maximum 5 concurrent connections per IP
        limit_conn conn_limit 5;

        proxy_pass http://pulse_finder_backend;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    }

    location /v1/jwt {
        # Rate limiting with immediate handling of bursts
        limit_req zone=api_limit burst=20 nodelay;
        # Connection limit: maximum 5 concurrent connections per IP
        limit_conn conn_limit 5;

        proxy_pass http://pulse_finder_backend;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    }

    # Block access to any routes by default
    location / {
        return 403;
    }

    error_page 404 /404.html;
}
